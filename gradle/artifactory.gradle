if (!project.hasProperty('artifactoryUser') || !project.hasProperty('artifactoryPwd') || !project.hasProperty('artifactoryAPIKey')) {
    logger.warn("'artifactoryUser' and 'artifactoryPwd' or 'artifactoryAPIKey' are not defined in '~/.gradle/gradle.properties', publishing to artifactory will not work! Please consult the README.md")
} else {
    publishing {
        repositories {
            maven {
                credentials {
                    username project.getProperty('artifactoryUser')
                    password project.getProperty('artifactoryPwd')
                }
                allowInsecureProtocol true
                url project.version.endsWith('-SNAPSHOT') ?
                    'http://10.16.58.3:8082/repository/maven-pbx-snapshots' :
                    'http://10.16.58.3:8082/repository/maven-pbx'
            }
        }
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            groupId = project.group
            artifactId = project.name
            version = project.version
            artifact sourcesJar
            from components.java

            pom {
                name = "${rootProject.name}-${project.name}"
                description = project.description
                url = 'https://github.com/<TODO>/jPowerMonitor' // TODO URL github

                scm {
                    connection = 'scm:git:https://github.com/<TODO>/jPowerMonitor.git'
                    developerConnection = 'scm:git:git@github.com:<TODO>/jPowerMonitor.git'
                    url = 'https://github.com/<TODO>/jPowerMonitor.git'
                }

                licenses {
                    license {
                        name = 'The MIT License (MIT)'
                        url = 'http://opensource.org/licenses/MIT'
                        distribution = 'repo'
                    }
                }

                developers {
                    developer {
                        id = 'deinerj'
                        name = 'Jakob Deiner'
                        email = 'jakob.deiner@msg.group'
                    }
                    developer {
                        id = 'keilhofh'
                        name = 'Hans-Peter Keilhofer'
                        email = 'hans-peter.keilhofer@msg.group'
                    }
                    developer {
                        id = 'brandenstein'
                        name = 'Christian Brandenstein'
                        email = 'christian.brandenstein@msg.group'
                    }
                    developer {
                        id = 'schmiedgen'
                        name = 'Lukas Schmiedgen'
                        email = 'lukas.schmiedgen@msg.group'
                    }
                    developer {
                        id = 'jacksons'
                        name = 'Sara Jackson'
                        email = 'sara.jackson@msg.group'
                    }
                    developer {
                        id = 'diehla'
                        name = 'Andreas Diehl'
                        email = 'andreas.diehl@msg.group'
                    }
                }
            }
        }
    }
}
