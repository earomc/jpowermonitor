plugins {
    id 'java-library'
    id 'maven-publish'
    id 'jacoco'
    id 'com.adarshr.test-logger' version "$testLoggerPluginVersion"
    id 'com.github.ben-manes.versions' version "$versionsPluginVersion"
    id "io.freefair.lombok" version "$lombokPluginVersion"
    id "com.github.johnrengelman.shadow" version "$shadowPluginVersion"
    id 'com.github.jk1.dependency-license-report' version "$licensePluginVersion"
    id 'org.cyclonedx.bom' version "$cyclonedxBOMPluginVersion"
}

group = 'group.msg'
version = rootProject.file('version.txt').text.trim()

sourceCompatibility = JavaVersion.VERSION_11
targetCompatibility = JavaVersion.VERSION_11

repositories {
    mavenCentral()
}
dependencies {
    implementation(
        [group: 'org.apache.httpcomponents', name: 'httpclient', version: httpclientVersion],
        [group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-jsr310', version: jacksonDatatypeJsr310Version],
        [group: 'org.yaml', name: 'snakeyaml', version: snakeYamlVersion],
    )
    runtimeOnly(
        [group: 'org.junit.jupiter', name: 'junit-jupiter', version: jupiterVersion],
    )
    compileOnly(
        [group: 'org.jetbrains', name: 'annotations', version: jetbrainsAnnotationsVersion],
    )
    testImplementation(
        // use logger only in test implementation in order to have a minimal set of dependencies in main source
        [group: 'org.slf4j', name: 'slf4j-api', version: slf4jVersion],
        [group: 'ch.qos.logback', name: 'logback-classic', version: logbackVersion],
        [group: 'org.assertj', name: 'assertj-core', version: assertJVersion]
    )
}

apply from: "gradle/test-config.gradle"
apply from: "gradle/jar.gradle"
apply from: "gradle/dependencyUpdates.gradle"
apply from: "gradle/artifactory.gradle"
apply from: "gradle/dist.gradle"

// --------------------- shadowJar
shadowJar {
    exclude("*.yaml")
    exclude("logback.xml")
}

// --------------------- license-report:
import com.github.jk1.license.filter.LicenseBundleNormalizer
import com.github.jk1.license.render.InventoryHtmlReportRenderer

licenseReport {
    renderers = [new InventoryHtmlReportRenderer()]
    filters = [new LicenseBundleNormalizer(bundlePath: "$projectDir/gradle/license-normalizer-bundle.json")]
}

// --------------------- SBOM:
cyclonedxBom {
    // includeConfigs is the list of configuration names to include when generating the BOM
    // (leave empty to include every configuration)
    includeConfigs = []
    // skipConfigs is a list of configuration names to exclude when generating the BOM
    skipConfigs = ["testCompileClasspath", "testRuntimeClasspath"]
}
